name: Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: timescale/timescaledb:latest-pg13
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm ci
      - run: npm run lint
      - run: npm run build
      - run: npm run test
      - run: npm run test:integration
        env:
          CAF_CERTIFICATE: ${{ secrets.CAF_CERTIFICATE }}
          CAF_PRIVATE_KEY: ${{ secrets.CAF_PRIVATE_KEY }}
          CAF_HOST: ${{ secrets.CAF_HOST }}
          TEST_CODE_POSTAL: ${{ secrets.TEST_CODE_POSTAL }}
          TEST_NUMERO_ALLOCATAIRE: ${{ secrets.TEST_NUMERO_ALLOCATAIRE }}
          TEST_TAX_NOTICE_NUMBER: ${{ secrets.TEST_TAX_NOTICE_NUMBER }}
          TEST_TAX_NUMBER: ${{ secrets.TEST_TAX_NUMBER }}
          TEST_POLE_EMPLOI_ID: ${{ secrets.TEST_POLE_EMPLOI_ID }}
          POLE_EMPLOI_TOKEN_URL: ${{ secrets.POLE_EMPLOI_TOKEN_URL }}
          POLE_EMPLOI_CLIENT_ID: ${{ secrets.POLE_EMPLOI_CLIENT_ID }}
          POLE_EMPLOI_CLIENT_SECRET: ${{ secrets.POLE_EMPLOI_CLIENT_SECRET }}
          POLE_EMPLOI_SCOPES: ${{ secrets.POLE_EMPLOI_SCOPES }}
          POLE_EMPLOI_API_URL: ${{ secrets.POLE_EMPLOI_API_URL }}
          TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
      - run: npm run compile
  coverage:
    needs: [ test ]
    name: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm ci
      - uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: 58d135b01479962c6a2aa07b51c29fd2251904da10bd164bdd85d943230c5a1e
        with:
          coverageCommand: npm run coverage
